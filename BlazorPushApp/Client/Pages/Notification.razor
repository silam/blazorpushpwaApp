@page "/notification"

@inject IJSRuntime JSRuntime
@inject HttpClient Http
@using BlazorPushApp.Shared



<PageTitle>Notification</PageTitle>

<h3>Notification</h3>

<button @onclick=SubscriptionAsync>Subscribe</button>
<button @onclick=UnSubscriptionAsync>Un-Subscribe</button>
<button @onclick=SendNotificationToAll>Send notification all</button>
<div>@status</div>

@code {
    private string status = "";

    async Task SubscriptionAsync()
    {
        status = "...";

        var subscription = await JSRuntime.InvokeAsync<NotificationSubscription>("blazorPushNotifications.requestSubscription");
        if (subscription != null)
        {
            subscription.UserId = ""; //set user ID
            var response = await Http.PostAsJsonAsync<NotificationSubscription>("Notification/subscribe", subscription);
            int totalSubscribedDevice = await response.Content.ReadFromJsonAsync<int>();
            status = "subscription done. Total device: " + totalSubscribedDevice;
        }
        else
        {
            status = "Already subscribed";
        }
    }

    async Task UnSubscriptionAsync()
    {
        status = "...";
        var unSubscribeStatus = await JSRuntime.InvokeAsync<bool>("blazorPushNotifications.unSubscribe");
        if (unSubscribeStatus)
        {
            //TODO: remove the subscription from server side also.
            status = "un-subscription done";
        }
    }

    async Task SendNotificationToAll()
    {
        status = "...";
        int notificationSentTo = await Http.GetFromJsonAsync<int>("Notification/sendall");
        status = "notification sent to " + notificationSentTo + " devices";
    }
}